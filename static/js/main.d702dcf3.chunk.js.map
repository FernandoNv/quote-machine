{"version":3,"sources":["components/social-icon/social-icon.component.jsx","components/social-icons/social-icons.component.jsx","components/button/button.component.jsx","components/quote-box/quote-box.component.jsx","components/colors/colors.js","App.js","index.js"],"names":["SocialIcon","text","author","name","color","social","style","backgroundColor","href","id","className","target","SocialIcons","icons","map","index","key","Button","newQuote","colors","secondaryColor","onClick","QuoteBox","primaryColor","COLORS","App","props","getRandomQuoteHanlder","a","fetch","response","json","data","Math","floor","length","random","setState","console","log","getRandomColorHanlder","randomColors","state","this","styles","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d702dcf3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './social-icon.styles.scss';\r\n\r\nconst SocialIcon = ({ text, author, name, social, color }) => (\r\n    <a style={{ backgroundColor: color }} href={`https://twitter.com/intent/tweet?hashtags=quotes&text=\"${text}\" ${author}`} id={name === 'twitter' ? \"tweet-quote\" : \"\"} className=\"share-icon\" target=\"_blanket\">\r\n        <i className={`fab fa-${name} social-icon`}></i>\r\n    </a>\r\n);\r\n\r\nexport default SocialIcon;","import React from 'react';\r\nimport SocialIcon from '../social-icon/social-icon.component';\r\nimport './social-icons.styles.scss';\r\n\r\nconst SocialIcons = ({ icons, text, author, color }) => (\r\n    <div className=\"share-icons\">\r\n        {\r\n            icons.map( (name, index) => <SocialIcon text={text} author={author} name={name} key={index} color={color} /> )\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default SocialIcons;","import React from 'react';\r\nimport './button.styles.scss';\r\n\r\nconst Button = ({ text, newQuote, colors }) => (\r\n    <button style={{ backgroundColor: colors.secondaryColor }} onClick={newQuote} id=\"new-quote\" className=\"btn\">{text}</button>\r\n);\r\n\r\nexport default Button;","import React from  'react';\r\nimport SocialIcons from '../social-icons/social-icons.component';\r\nimport Button from '../button/button.component';\r\nimport './quote-box.styles.scss';\r\n\r\n\r\nconst QuoteBox = ({text, author, colors, newQuote}) => {\r\n\r\n    return(\r\n        <div id=\"quote-box\">\r\n            <div className=\"item-flex\">\r\n                <i style={{ color: colors.secondaryColor }} className=\"fas fa-quote-left quote-icon\"></i>\r\n                <Button newQuote={newQuote} text=\"new-quote\" colors={ colors } />\r\n            </div>\r\n            <div className=\"item-flex\">\r\n                <p id=\"text\" style={{ color: colors.primaryColor }}>{ text }</p>\r\n            </div>\r\n            <div className=\"item-flex\">\r\n                <SocialIcons icons={[\"twitter\", \"tumblr\"]} text={text} author={author} color={ colors.secondaryColor }/>\r\n                <p id=\"author\" style={{ color: colors.secondaryColor}} >{author ? author: 'unknown'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default QuoteBox;","const COLORS = [\r\n    {\r\n        \"primaryColor\": \"#3A001E\",\r\n        \"secondaryColor\": \"#9F7070\"\r\n    },\r\n    {\r\n        \"primaryColor\": \"#008B66\",\r\n        \"secondaryColor\": \"#964ED6\"\r\n    },\r\n    {\r\n        \"primaryColor\": \"#0075F8\",\r\n        \"secondaryColor\": \"#008940\"\r\n    },\r\n    {\r\n        \"primaryColor\": \"#008F7A\",\r\n        \"secondaryColor\": \"#2C73D2\"\r\n    },\r\n    {\r\n        \"primaryColor\": \"#D65DB1\",\r\n        \"secondaryColor\": \"#845EC2\"\r\n    },\r\n    {\r\n        \"primaryColor\": \"#2C73D2\",\r\n        \"secondaryColor\": \"#008F7A\"\r\n    },\r\n    {\r\n        \"primaryColor\": \"#845EC2\",\r\n        \"secondaryColor\": \"#D65DB1\"\r\n    },\r\n    {\r\n        \"primaryColor\": \"#4B4453\",\r\n        \"secondaryColor\": \"#B0A8B9\"\r\n    },\r\n    {\r\n        \"primaryColor\": \"#CF3D2A\",\r\n        \"secondaryColor\": \"#FF8066\"\r\n    },\r\n    {\r\n        \"primaryColor\": \"#468015\",\r\n        \"secondaryColor\": \"#7CB54B\"\r\n    },\r\n    \r\n]\r\n\r\nexport default COLORS;","import React from 'react';\nimport QuoteBox from './components/quote-box/quote-box.component';\nimport colors from './components/colors/colors';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: {\n        text: \"\",\n        author: \"\"\n      },\n      colors: {\n        primaryColor: \"\",\n        secondaryColor: \"\"\n      }\n    }\n  }\n\n  getRandomQuoteHanlder = async () =>{\n    try{\n      const response = await fetch(\"https://type.fit/api/quotes\");\n      const data = await response.json();\n      const newQuote = data[Math.floor(data.length*Math.random())];\n      this.setState({\n        data: newQuote\n      });\n    }catch(error){\n      console.log(error);\n    }\n\n    this.getRandomColorHanlder();\n  }\n\n  getRandomColorHanlder = () => {\n    const randomColors = colors[Math.floor(colors.length*Math.random())];\n    this.setState({\n      colors: randomColors\n    });\n  }\n\n  componentDidMount(){\n    this.getRandomQuoteHanlder();\n    this.getRandomColorHanlder();\n  }\n\n  render(){\n    const { text, author } = this.state.data;\n    const { primaryColor } = this.state.colors;\n    const styles = {\n      backgroundColor: primaryColor\n    };\n    return (\n      <div className=\"App\" style={styles}>\n        <QuoteBox colors={this.state.colors} text={text} author={author} newQuote={this.getRandomQuoteHanlder}/>\n        <footer>\n          <p>Fernando Vieira</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}